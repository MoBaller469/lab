GitLab Practice Notes
Yesterday, we executed the following steps:

Created an account on gitlab.com.
Created a repository named "lab" on GitLab.
On our personal laptop, we created an SSH public/private key pair:
a) To generate the keys, run:
bash ssh-keygen -t rsa -b 4096 -C "your_email@example.com" Follow the prompts, and take all defaults for file location and passphrase (if you desire a passphrase).

b) Display the public key and copy it:
cat ~/.ssh/id_rsa.pub Copy the output.
Uploaded the public SSH key to GitLab:
Go to GitLab, then navigate to Settings > SSH Keys.
Paste your public key into the provided field and save it.

Cloned the repository that we created on GitLab:

Use the SSH method to clone your repository (ensure you have the correct URL from GitLab):

git clone git@gitlab.com:<username>/lab.git
Replace <username> with your GitLab username.

Additional Notes:
Make sure you use the SSH URL from GitLab when cloning if you set up SSH keys, as this allows you to operate without entering your credentials frequently.

remember to configure your Git client with your name and email:

git config --global user.name "Your Name"
git config --global user.email "your_email@example.com"
These configurations help identify the author of the commits and are necessary for collaborative projects.
This should correct and clarify your practice notes. Let me know if there's anything else you'd like to add or further details you need!
1. git add "file name"
2. git commit -m "initial commit'
3. git push


#04/24/2024

#Learning basic vi editor

vi/vim has 3 modes
  1. esc mode
  2. insert mode
  3. normal mode

First thing to do is enter into insert mode/allows you to type
 - w: write
 - q: quit
 - !: immediately
 - gg: takes you to the top of page
 - G: takes you to the bottom of page
 - $: takes you to the end of the line/sentence
 - 0: takes you to the beginning of the line/sentence
 - dG: deletes the whole file
 - dd: deletes the line
 - [0-9]dd: deletes the number of lines specified
 - uu: undo the previous action
 - l: moves to the right
 - k: moves up
 - j: goes down
 - h: moves left
 - [0-9](l,k,j,h): moves right,left,down,up to specified number
 - d$: deletes entire line
 - yy - copy
 - p - paste
 - a - append
 - sudo - super user do
 - O - Creates a new line above current line
 - o - Creates a new line below current line
 - cd - change directory/takes to home directory
 - cd ~ - takes to home directory/same as cd
 - pwd - parent working directory
 - rm - remove
 - rmdir - remove directory
 - mkdir - make directory
 - Full Path - shows complete path of the directory (Ex: /home/khan/test/test2)
 - Relative Path - shows previous path/home directory
 - rm -fr "directory name" - deletes everything in the specifid directory 
 - (t) sticky pit - everyone has full access (chmod 777)
 - /tmp - used to store the short-lived temporary files
 - df -h - display file system in human readable format/shows disk space in human-readable format
 - mv - move (Ex: mv learning ~ : moves the directory "learning" to my home directory)    
 - .. - goes to the previous directory
 - ../.. - goes 2 previous directories
 - :/"Key Word" - Searches specific key word you're looking for
 - :%s/"old name"/"new name" - replaces old name with new name
 - :%s/"old name"/"old name"1/g - changes all "old name" words to "old name"1 (Ex: :%s/plano/plano1/g
									           - changes all "plano" words
   										     to "plano1"
 - !'line number' - runs the command on the specified line in history of the command line
 - more - gives a page of command history (Ex: history | more ---> gives a page of the command line history)
 - q - quits out of page
 - control 'r' "key word"  - cycles through previous commands of specified key word (Ex: control 'r' "ls" --> cycles 
										     thru all previous ls commands)
 - pts - unique id connection
 - wall - send a quick message to the terminals of all currently logged in users
 - whoami - a built-in utility that displays the username of the current user
 - w - provides a quick summary of every user logged into a computer, what each user is currently doing, and what load        all the activity is imposing on the computer itself
 
 - pkill - allows you to terminate processes based on their names and other attributes (Ex: pkill -u hamza ---> removes
          									       hamza from connection)

 - usermod - a powerful tool for managing user accounts (Ex: usermod -c "Muhammad Khan" --->  updates information on 							       Muhammad Khan)

 - useradd - creates a new user account (Ex: useradd -c "Muhammad Khan" -s /bin/zsh khan2 ---> adds new user to the 
					zsh shell and username is "khan2")

 - userdel - removes the user account identified by the login parameter
 - grep - perform text searches for a defined criteria of words or strings
 - shutdown - allows you to shut down a computer
 - sdiff - shows the text difference between 2 files (Ex: sdiff lab.txt lab2 --> shows the difference between
  						          lab.txt and lab2)

 - c - comment
 - s - shell
 - a - add
 - G - group (Ex: aG - add Group) 
 - uptime - shows the system's uptime, how long it has been running, and when it was last booted
 - who -b - shows when the system was last booted
 - man - used to display the user manual of any command that we can run on the terminal
 - # - a program or utility that runs on the command line
 - i - case senstive
 - r - recursive

File Permissions
 -Owner Group Others
  7     0     0

 - r (read)    = 4
 - w (write)   = 2
 - x (execute) = 1

 - u (user)
 - g (group)
 - o (others)

 - When using ugo, use alphabetical permission not numerical (Ex: chmod ug+rx ----> owner and group can read and          execute
 - If permissions are to be granted use '+' (Ex: chmod go+rwx ---> gives groups and others all permissions)
 - If permissions are to be revoked use '-' (Ex: chmod g0-rwx ---> revokes groups and others of all permissions)

